local game_data = require("main.game_data")

function init(self)
	-- Add initialization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function final(self)
	-- Add finalization code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function update(self, dt)
	-- Add update code here
	-- Learn more: https://defold.com/manuals/script/
	-- Remove this function if not needed
end

function on_message(self, message_id, message, sender)
	if message_id == hash("update_gui") then
		local fame_label = gui.get_node("fame_label")
		local fame_pie = gui.get_node("fame_pie")
		gui.set_fill_angle(fame_pie, math.min(game_data.fame / game_data.fameObjective * 360, 360))
		gui.set_text(fame_label, "fame: " .. game_data.fame)
		local films_left_label = gui.get_node("films_left_label")
		gui.set_text(films_left_label, "films left: " .. game_data.filmsLeft)

		local dof_cursor = gui.get_node("dof_cursor")
		gui.set_position(dof_cursor, vmath.vector3(375 + game_data.focus * 256, 32, 0))
	end
end


function on_input(self, action_id, action)
	-- Add input-handling code here. The game object this script is attached to
	-- must have acquired input focus:
	--
	--    msg.post(".", "acquire_input_focus")
	--
	-- All mapped input bindings will be received. Mouse and touch input will
	-- be received regardless of where on the screen it happened.
	-- Learn more: https://defold.com/manuals/input/
	-- Remove this function if not needed
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
