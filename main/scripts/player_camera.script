go.property("shutter_speed", 1) -- in seconds
go.property("move_speed", 350)
go.property("film_left", 5)

local DISPLAY_WIDTH = sys.get_config_int("display.width")
local DISPLAY_HEIGHT = sys.get_config_int("display.height")

-- function to convert screen (mouse/touch) coordinates to
-- world coordinates given a camera component
-- this function will use the camera view and projection to
-- translate the screen coordinates into world coordinates
local function screen_to_world(x, y, z, camera_id)
	local projection = camera.get_projection(camera_id)
	local view = camera.get_view(camera_id)
	local w, h = window.get_size()
	-- The window.get_size() function will return the scaled window size,
	-- ie taking into account display scaling (Retina screens on macOS for
	-- instance). We need to adjust for display scaling in our calculation.
	w = w / (w / DISPLAY_WIDTH)
	h = h / (h / DISPLAY_HEIGHT)

	-- https://defold.com/manuals/camera/#converting-mouse-to-world-coordinates
	local inv = vmath.inv(projection * view)
	x = (2 * x / w) - 1
	y = (2 * y / h) - 1
	z = (2 * z) - 1
	local x1 = x * inv.m00 + y * inv.m01 + z * inv.m02 + inv.m03
	local y1 = x * inv.m10 + y * inv.m11 + z * inv.m12 + inv.m13
	local z1 = x * inv.m20 + y * inv.m21 + z * inv.m22 + inv.m23
	return x1, y1, z1
end

function init(self)
	self.mpos = vmath.vector3(0, 0, 90)

	msg.post(".", "acquire_input_focus")

	self.shutter_duration = 0
	self.last_shutter_duration = 0
	self.shutter_progress = 0
end

function update(self, dt)


	if self.is_start_timer then -- <13>
		self.shutter_duration = self.shutter_duration + dt -- <14>
	end

	self.shutter_progress = vmath.lerp(self.shutter_progress, math.min(self.shutter_duration / self.shutter_speed, 1.0), dt)
	local o = (1.0 - self.shutter_progress) * 0.1

	go.set_scale(1 + o, 1 + o, 1)
	go.set_position(self.mpos)
	go.set("#label", "color.w", self.shutter_progress)
end

function on_message(self, message_id, message, sender)
	-- Add message-handling code here
	-- Learn more: https://defold.com/manuals/message-passing/
	-- Remove this function if not needed
end

function on_input(self, action_id, action)
	if action.id == nil then
		self.mpos.x, self.mpos.y, self.mpos.z =  screen_to_world(action.x, action.y, 0, "main:/camera#camera")
	end

	if action_id == hash("touch") then -- <6>
		if action.pressed then -- <7>
			self.is_start_timer = true -- <8>
		elseif action.released then -- <9>
			self.is_start_timer = false -- <10>
			self.last_shutter_duration = self.shutter_duration -- <11>
			self.shutter_duration = 0
			update_text(self) -- <12>
		end
	end
end

function on_reload(self)
	-- Add reload-handling code here
	-- Learn more: https://defold.com/manuals/hot-reload/
	-- Remove this function if not needed
end
